using System;

namespace HanseaticSort_001
{
    //    AUGABE VON ADRIAN nr.2
    //
    // Schreibe einen Algorithmus, der eine Liste von Zahlen so sortiert, dass eine Liste mit
    //
    // 1) die kleinste Zahl in der Mitte,                                            // OK
	// 2) von der Mitte aus nach links aufsteigend alle ungeraden Zahlen und         // OK
	// 3) von der Mitte aus nach rechts aufsteigend alle geraden Zahlen              // OK
    //    ausgegeben wird.
    //
    // Es muss möglich sein eine zufällige Liste von Zahlen zu generieren und eine Liste von Zahlen
    // vom User einzulesen.
    class Program
    {
        public static int[] minCenterArray;
        static void Main(string[] args)
        {
            // choose array input type
            int choice = Menu.ProgramMenu();
            MyFunctions.HelloMessage(choice);
            //Menu.Logic(choice);
            if (choice == 1)
            {
                HumanGenerated humansArray = new HumanGenerated();
                int[] array1 = humansArray.CreateArr();
                minCenterArray = array1;
                Console.WriteLine("Array was from HUMAN generated.");
                Console.WriteLine();
                Console.WriteLine("Mission 1, smallest digit in the center: ");
                Console.WriteLine();
                // The smallest digit in the center
                MyFunctions.Aufgabe_1(minCenterArray);
                MyFunctions.PrintMyArray(minCenterArray, MyFunctions.smallestElement);
                Console.WriteLine();
                Console.WriteLine();
                Console.WriteLine("Mission 2, even and odd arrays: ");
                Console.WriteLine();
                Console.WriteLine();

                MyFunctions.FinalArrayErstellen(minCenterArray);
                Console.WriteLine();
            }
            else
            {
                AutoGenerated autoArray = new AutoGenerated();
                int[] array1 = autoArray.CreateArr();
                // at first make a copy of array. Array1 is a clean array without manipulations (only sort)
                minCenterArray = array1;
                Console.WriteLine("Array was from highes form of evolution generated. Ave Mashine!");
                Console.WriteLine();
                Console.WriteLine("Mission 1, smallest digit in the center: ");
                Console.WriteLine();
                // the smallest digit in the center
                MyFunctions.Aufgabe_1(minCenterArray);
                MyFunctions.PrintMyArray(minCenterArray, MyFunctions.smallestElement);
                Console.WriteLine();
                Console.WriteLine();
                Console.WriteLine("Mission 2, even and odd arrays: ");
                Console.WriteLine();
                // until here everything goes ok    =)

                //check one
                //MyFunctions.PrintMyArray(minCenterArray); // später löschen
                MyFunctions.FinalArrayErstellen(minCenterArray);
            }

            //// ungerade digits + gerade digits
            //if (AutoGenerated.isAutoGenerated)
            //{
            //    Console.WriteLine();
            //    Console.WriteLine("Mission 1, smallest digit in the center: ");
            //    Console.WriteLine();
            //    // Null in center
            //    MyFunctions.Aufgabe_1(minCenterArray);

            //    MyFunctions.PrintMyArray(minCenterArray, MyFunctions.smallestElement);

            //    Console.WriteLine();
            //    Console.WriteLine();
            //    Console.WriteLine("Mission 2, even and odd arrays: ");
            //    Console.WriteLine();
            //    Console.WriteLine();
                
            //    MyFunctions.FinalArrayErstellen(minCenterArray);
            //    Console.WriteLine();
            //} else if (HumanGenerated.isHumanGenerated)
            //{
            //    Console.WriteLine();
            //    Console.WriteLine("Mission 1, smallest digit in the center: ");
            //    Console.WriteLine();
            //    // the smallest digit in center
            //    MyFunctions.Aufgabe_1(minCenterArray);
            //    MyFunctions.PrintMyArray(minCenterArray, MyFunctions.smallestElement);
            //    Console.WriteLine();
            //    Console.WriteLine("Mission 2, even and odd arrays: ");
            //    Console.WriteLine();
            //    // until here everything goes ok    =)

            //    //check one
            //    //MyFunctions.PrintMyArray(minCenterArray); // später löschen
            //    MyFunctions.FinalArrayErstellen(minCenterArray);
            //    //MyFunctions.Aufgabe_2(minCenterArray);
            //    ////check Two
            //    //MyFunctions.PrintMyArray(minCenterArray);

            //    //Console.WriteLine();
            //    //Console.Write("[ ");
            //    //MyFunctions.PrintMyArray(MyFunctions.part1Array);
            //    //Console.Write(MyFunctions.smallestElement + " ");
            //    //MyFunctions.PrintMyArray(MyFunctions.part2Array);
            //    //Console.Write("]");
            //    //Console.WriteLine();
            }



            //MyFunctions.PrintMyArray(MyFunctions.part1Array);
            //Console.WriteLine();
            //MyFunctions.PrintMyArray(MyFunctions.part2Array);
        }
    }






